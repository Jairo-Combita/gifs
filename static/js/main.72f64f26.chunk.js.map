{"version":3,"sources":["hooks/useScroll.js","componentes/AddCategory.js","helpers/getGif.js","componentes/Items.js","componentes/Category.js","hooks/useFetchGifs.js","componentes/GifApp.js","index.js"],"names":["ScrollArrow","useState","showScroll","setShowScroll","window","addEventListener","pageYOffset","className","onClick","scrollTo","top","behavior","style","height","display","AddCategory","setHeroes","valor","setValor","onSubmit","e","preventDefault","trim","length","heroes","console","log","type","value","onChange","target","getUrl","heroe","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","Items","src","alt","Category","loading","state","setState","useEffect","then","useFetchGifs","items","key","GifExpertApp","props","ReactDOM","render","GifApp","document","getElementById"],"mappings":"oNA4BeA,G,KAvBK,WAAM,IAAD,EAEaC,oBAAS,GAFtB,mBAEhBC,EAFgB,KAEJC,EAFI,KAkBvB,OAFAC,OAAOC,iBAAiB,UAZD,YAChBH,GAAcE,OAAOE,YAAc,IACtCH,GAAc,GACLD,GAAcE,OAAOE,aAAe,KAC7CH,GAAc,MAWZ,kBAAC,IAAD,CAAiBI,UAAU,YAAYC,QAP3B,WAChBJ,OAAOK,SAAS,CAACC,IAAK,EAAGC,SAAU,YAM4BC,MAAO,CAACC,OAAQ,GAAIC,QAASZ,EAAa,OAAS,Y,QC6BvGa,EAjDK,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAAe,EAEPf,mBAAS,IAFF,mBAE1BgB,EAF0B,KAEnBC,EAFmB,KAyBjC,OACI,yBAAKX,UAAU,cAEX,0BAAMY,SApBG,SAACC,GACdA,EAAEC,iBAECJ,EAAMK,OAAOC,OAAQ,IAIpBP,GAAW,SAAAQ,GAAM,OAAKP,GAAL,mBAAgBO,OACjCN,EAAS,IACTO,QAAQC,IAAI,qBAaR,2BACIC,KAAO,OACPC,MAAUX,EACVY,SA7BC,SAACT,GACdF,EAAUE,EAAEU,OAAOF,a,uBCRdG,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAUH,GAD9C,8DAEMI,MAAMF,GAFZ,cAEZG,EAFY,gBAGKA,EAAUC,OAHf,uBAGVC,EAHU,EAGVA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MAEXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAeXM,GAfW,4CAAH,sDCUJO,EATD,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACnB,OACI,yBAAK3B,UAAU,SACX,yBAAKyC,IAAMd,EAAMe,IAAML,IACvB,4BAAMA,KCkCHM,EApCE,SAAC,GAAe,IAAblB,EAAY,EAAZA,MAAY,ECDJ,SAAEA,GAAY,IAAD,EAEX/B,mBAAS,CAC/BsC,KAAK,GACLY,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAgCrC,OAtBCC,qBAAU,WACNvB,EAAQC,GAAQuB,MAAM,SAAAb,GAClBW,EAAS,CAACd,KAAMG,EAChBS,SAAS,SAId,CAAEnB,IAeCoB,ED7ByBI,CAAcxB,GAAjCyB,EAFe,EAEpBlB,KAAYY,EAFQ,EAERA,QAKpB,OACI,oCAECA,EACD,gDAIE,oCAEE,4BAAMnB,GACN,yBAAMzB,UAAU,gBAGRkD,EAAMhB,KAAI,SAAEC,GAAF,OACN,kBAAC,EAAD,eACAgB,IAAQhB,EAAIC,IACRD,WEgBbiB,EAtCM,SAAAC,GAAU,IAAD,EACE3D,mBAAS,IADX,mBACnBuB,EADmB,KACXR,EADW,KAG1B,OACI,yBAAKT,UAAU,aACX,yBAAKA,UAAU,WACX,8CACA,kBAAC,EAAD,CAAaS,UAAWA,KAK5B,yBAAKT,UAAU,YAGPiB,EAAOiB,KAAI,SAAAT,GAEP,OAAO,kBAAE,EAAF,CACK0B,IAAO1B,EACPA,MAAOA,QAO/B,yBAAKzB,UAAU,UAEX,kBAAC,EAAD,MAGA,qDChChBsD,IAASC,OACP,kBAACC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.72f64f26.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {FaArrowCircleUp} from 'react-icons/fa';\r\nimport '../index.css';\r\n\r\n\r\nconst ScrollArrow = () =>{\r\n\r\n  const [showScroll, setShowScroll] = useState(false)\r\n\r\n  const checkScrollTop = () => {\r\n    if (!showScroll && window.pageYOffset > 400){\r\n      setShowScroll(true)\r\n    } else if (showScroll && window.pageYOffset <= 400){\r\n      setShowScroll(false)\r\n    }\r\n  };\r\n\r\n  const scrollTop = () =>{\r\n    window.scrollTo({top: 0, behavior: 'smooth'});\r\n  };\r\n\r\n  window.addEventListener('scroll', checkScrollTop)\r\n\r\n  return (\r\n        <FaArrowCircleUp className=\"scrollTop\" onClick={scrollTop} style={{height: 60, display: showScroll ? 'flex' : 'none'}}/>\r\n  );\r\n}\r\n\r\nexport default ScrollArrow;","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ({setHeroes}) => {\r\n\r\n    const [valor, setValor] = useState('');\r\n\r\n    const inputSet = (e) =>{\r\n        setValor( e.target.value);\r\n    }\r\n\r\n    const sendForm = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(valor.trim().length >2){\r\n\r\n            // Se recibe por callback la lista \r\n            // de heroes ya hecha en GifExpertApp\r\n            setHeroes( heroes => [valor , ...heroes ]);\r\n            setValor('');\r\n            console.log('Hace el submit');\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"formulario\">\r\n\r\n            <form onSubmit ={ sendForm }>\r\n            \r\n                <input\r\n                    type = \"text\"\r\n                    value = { valor }\r\n                    onChange = { inputSet }\r\n\r\n                />\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setHeroes: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default AddCategory\r\n","\r\nexport const getUrl = async ( heroe ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(heroe)}&limit=6&api_key=6qO5rCJ1Sp7V0I97i9Wsa1rjtrv6yZI7`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            // si hay imagen la ingresa\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nconst Items = ({title, url}) => {\r\n    return (\r\n        <div className=\"card \" >\r\n            <img src={ url } alt={ title }></img>\r\n            <h5>{ title }</h5>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Items\r\n","import React from 'react'\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\nimport Items from './Items';\r\n\r\nconst Category = ({ heroe }) => {\r\n\r\n    const { data:items, loading } = useFetchGifs( heroe );\r\n   \r\n    // al colocar un boton y No usamos el useEffect, se dispara \r\n    // varias veces el fetch\r\n\r\n    return (\r\n        <>\r\n\r\n        {loading ? \r\n        <div>\r\n            Cargando ......\r\n        </div>\r\n\r\n        : <>\r\n\r\n            <h2 >{heroe}</h2>     \r\n            <div  className=\"alineaciones\">             \r\n                {\r\n                    // cuando no tiene las llaves se hace un return implicito\r\n                    items.map(( img ) =>(\r\n                        <Items \r\n                        key = { img.id}\r\n                        {...img }\r\n                        />\r\n\r\n                    ) )\r\n                }             \r\n            </div> \r\n\r\n          </>  }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Category\r\n","import {useEffect, useState} from 'react'\r\nimport { getUrl } from '../helpers/getGif';\r\n\r\nexport const useFetchGifs = ( heroe ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n\r\n    \r\n    // los useEffect no pueden ser async por que esperan algo sincrono\r\n     useEffect(() => {\r\n         getUrl( heroe ).then( img =>{\r\n             setState({data: img,\r\n             loading: false\r\n             })\r\n         });\r\n\r\n     }, [ heroe ]);\r\n\r\n    // setTimeout(() => {\r\n    //     getUrl( heroe ).then( img =>{\r\n    //         setState({data: img,\r\n    //         loading: false\r\n    //         })\r\n    //     });\r\n\r\n    // }, 5000);\r\n\r\n\r\n\r\n\r\n\r\n    return state; // data y loading\r\n    \r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport ScrollArrow from '../hooks/useScroll';\r\n\r\nimport AddCategory from './AddCategory';\r\nimport Category from './Category';\r\n\r\nconst GifExpertApp = props => {\r\n    const [heroes, setHeroes] = useState([]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"header \">\r\n                <h2  >Buscador gifs </h2>\r\n                <AddCategory setHeroes={setHeroes}/>\r\n            </div>\r\n\r\n            {/* <div className=\"prueba\">{heroes}</div> */}\r\n\r\n            <div className=\"content \">      \r\n               \r\n                {\r\n                    heroes.map(heroe => {    \r\n                              \r\n                        return < Category  \r\n                                    key ={ heroe}\r\n                                    heroe={heroe} \r\n                                />\r\n                    })\r\n                }\r\n                \r\n            </div> \r\n     \r\n            <div className=\"footer\">  \r\n                \r\n                <ScrollArrow/>              \r\n\r\n                \r\n                <h4>Design by JCombita</h4>                \r\n            </div>         \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifApp from './componentes/GifApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}